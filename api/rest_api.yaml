openapi: 3.0.3
info:
  title: API для социальной сети ВКонтакте - OpenAPI 3.0
  description: |-
    REST API для социальной сети ВКонтакте со следующими операциями:
    - добавление и удаление друзей;
    - просмотр друзей пользователя;
    - просмотр анкеты пользователя;
    - публикация поста в ленту;
    - загрузка медиа файлов для постов;
    - просмотр ленты постов (*домашней и пользователей)*;
    - просмотр диалогов и чатов пользователя;
    - отправка и чтение сообщений в диалогах и чатах.
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Friends
    description: Операции с друзьями
  - name: Users
    description: Операции с пользователями
  - name: Posts
    description: Операции с постами
  - name: Media
    description: Операции с медиа файлами
  - name: Feed
    description: Операции с лентой постов
  - name: Dialogs
    description: Операции с диалогами и чатами
  - name: Messages
    description: Операции с сообщениями

paths:
  /users/{userId}/friends:
    post:
      tags:
        - Friends
      summary: Добавление друга
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: integer
                  format: int64
                  example: 67890
      responses:
        '200':
          description: Друг успешно добавлен

    get:
      tags:
        - Friends
      summary: Просмотр друзей пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      responses:
        '200':
          description: Список друзей пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friend'

  /users/{userId}/friends/{friendId}:
    delete:
      tags:
        - Friends
      summary: Удаление друга
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
        - name: friendId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 67890
      responses:
        '200':
          description: Друг успешно удален

  /users/{userId}:
    get:
      tags:
        - Users
      summary: Просмотр анкеты пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      responses:
        '200':
          description: Анкета пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}/posts:
    post:
      tags:
        - Posts
      summary: Публикация поста в ленту
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "Привет, мир!"
                media:
                  type: array
                  items:
                    type: integer
                    format: int64
                    example: [1, 2]
      responses:
        '200':
          description: Пост успешно опубликован

    get:
      tags:
        - Posts
      summary: Просмотр ленты постов пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      responses:
        '200':
          description: Лента постов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

  /media:
    post:
      tags:
        - Media
      summary: Загрузка медиа файлов для постов
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Медиа файл успешно загружен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'

  /feed:
    get:
      tags:
        - Feed
      summary: Просмотр домашней ленты постов
      responses:
        '200':
          description: Домашняя лента постов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

  /users/{userId}/dialogs:
    get:
      tags:
        - Dialogs
      summary: Просмотр диалогов и чатов пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 12345
      responses:
        '200':
          description: Список диалогов и чатов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dialog'

  /dialogs/{dialogId}/messages:
    post:
      tags:
        - Messages
      summary: Отправка сообщения в диалог или чат
      parameters:
        - name: dialogId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "Привет!"
      responses:
        '200':
          description: Сообщение успешно отправлено

    get:
      tags:
        - Messages
      summary: Чтение сообщений из диалога или чата
      parameters:
        - name: dialogId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Сообщения из диалога или чата
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        name:
          type: string
          example: "Иван"
        surname:
          type: string
          example: "Иванов"
        birthdate:
          type: string
          format: date
          example: "1990-01-01"
        city:
          type: string
          example: "Москва"
        status:
          type: string
          example: "В поиске работы"
        profile_photo:
          type: string
          example: "https://example.com/profile.jpg"
        friends:
          type: array
          items:
            type: integer
            format: int64
            example: [67890, 24680]
        posts:
          type: array
          items:
            type: integer
            format: int64
            example: [101, 102]
        dialogs:
          type: array
          items:
            type: integer
            format: int64
            example: [201, 202]

    Friend:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 67890
        name:
          type: string
          example: "Петр"
        surname:
          type: string
          example: "Петров"
        birthdate:
          type: string
          format: date
          example: "1992-02-02"
        city:
          type: string
          example: "Санкт-Петербург"
        status:
          type: string
          example: "Студент"
        profile_photo:
          type: string
          example: "https://example.com/friend_profile.jpg"

    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 101
        author:
          type: integer
          format: int64
          example: 12345
        content:
          type: string
          example: "Привет, мир!"
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        timestamp:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        likes:
          type: integer
          example: 5
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'

    Media:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        type:
          type: string
          example: "image"
        url:
          type: string
          example: "https://example.com/image.jpg"
        size:
          type: integer
          example: 1024
        timestamp:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"

    Dialog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        type:
          type: string
          example: "dialog"
        participants:
          type: array
          items:
            type: integer
            format: int64
            example: [12345, 67890]
        messages:
          type: array
          items:
            type: integer
            format: int64
            example: [401, 402]

    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 401
        author:
          type: integer
          format: int64
          example: 12345
        content:
          type: string
          example: "Привет!"
        timestamp:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        read:
          type: boolean
          example: true

    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 301
        author:
          type: integer
          format: int64
          example: 12345
        content:
          type: string
          example: "Отличный пост!"
        timestamp:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        post:
          type: integer
          format: int64
          example: 101